
@model Application_.Model.PedidoModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Novo Pedido</h1>

<h4>Informações</h4>
@using (Html.BeginForm("Create", "Pedido", FormMethod.Post, htmlAttributes: new { @id = "FormPedido" }))
{
    @Html.AntiForgeryToken()

    @*<input name="PedidoFechadoString" id="PedidoFechadoStringId" style="visible:hidden" />*@
    @*@Html.EditorFor(model => model.PedidoFechado, new { htmlAttributes = new { @class = "form-control", id = "PedidoFechado" } })*@

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NomeClient, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.NomeClient, new { htmlAttributes = new { @class = "form-control" } })*@
                <input type="text" class = "form-control" name="PedidoModel.NomeClient" />
                @Html.ValidationMessageFor(model => model.NomeClient, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MesaClient, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.MesaClient, new { htmlAttributes = new { @class = "form-control" } })*@
                <input type="text" class="form-control" name="PedidoModel.MesaClient" />
                @Html.ValidationMessageFor(model => model.MesaClient, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" style="display: flex; margin-left: 42px ">
            @Html.LabelFor(model => model.PrazoExecucao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @*@Html.EditorFor(model => model.PrazoExecucao, new { htmlAttributes = new { @class = "form-control" } })*@
                <input type="text" class="form-control" name="PedidoModel.PrazoExecucao" />
                @Html.ValidationMessageFor(model => model.PrazoExecucao, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-10">
                Horas
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StatusPedido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.StatusPedido, new { htmlAttributes = new { @class = "form-control", id = "StatusPedido", disabled = "disabled", @Value = "Pendente" } })*@
                <input type="text" class="form-control" id = "StatusPedido" disabled name="PedidoModel.StatusPedido" value="Pendente" />
                @Html.ValidationMessageFor(model => model.StatusPedido, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.HorarioPedidoFeito, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.HorarioPedidoFeito, new { htmlAttributes = new { @class = "form-control datepicker", id = "DataHora", disabled = "disabled", @Value = System.DateTime.Now.ToString("dd/MM/yyyy HH:mm") } })*@
                <input type="text" class="form-control" id = "DataHora"  disabled name="PedidoModel.HorarioPedidoFeito" value="@System.DateTime.Now.ToString("dd/MM/yyyy HH:mm")" />
                @Html.ValidationMessageFor(model => model.HorarioPedidoFeito, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}

<div style="text-align: center">
    <h2>Itens do Pedido</h2>
    <div id="EstoqueCreate"></div>
</div>

<div class="form-group" style="float: right">
    <input id="SubmitButton" value="Registrar Pedido" class="btn btn-primary" />
</div>

<div>
    @Html.ActionLink("Retornar", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script type="text/javascript">

    $("#SubmitButton").click(function () {
        var guardar = $("#DataHora").val();
        var guardarPecas = guardar.split('/');
        var horas = guardarPecas[2].split(' ')[1].split(':');
        $("#DataHora").val(`${guardarPecas[2].split(' ')[0]}-${guardarPecas[1]}-${guardarPecas[0]}T${horas[0]}:${horas[1]}`);



        var index = 0;
        var quantidadeMudar = 0;
        $('#FormItensEstoque').find('.DadosPedidoFechado').each(function () {

            if (quantidadeMudar == 0) {
                
                var valueInput = $(this).val();
                $("#FormPedido").append(`<input type="text" style="visibility:hidden" name="PedidoModel.PedidoFechado[${index}].EstoqueId" value="${valueInput}" />`);
                
            }                

            if (quantidadeMudar == 1) {

                var valueInput = $(this).val();
                $("#FormPedido").append(`<input type="text" style="visibility:hidden" name="PedidoModel.PedidoFechado[${index}].QuantidadeItem" value="${valueInput}" />`);
            }
            
            quantidadeMudar++;

            if (quantidadeMudar == 2) {
                index++;
                quantidadeMudar = 0;
            }
                
        });


        $("#DataHora").removeAttr("disabled");
        $("#StatusPedido").removeAttr("disabled");

        $("#FormPedido").submit();
    });


    var urlBase = "/Estoque/";
    var url = `${urlBase}Index/`;
    $.get(url).done(function (data) {
        $("#EstoqueCreate").html(data);
    });

</script>
